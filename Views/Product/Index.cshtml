
@{
    ViewBag.Title = "Index";
}

<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/bootstrap.js"></script>
<link href="~/Scripts/bootstrap.css" rel="stylesheet" />
<style>
    .tbody button a {
        color: #fff;
        text-decoration: none;
    }

    .tbody button {
        display: inline-block;
        border: none;
        padding: 8px 10px;
        border-radius: 4px;
        margin: 0;
        text-decoration: none;
        background: #0069ed;
        font-family: sans-serif;
        font-size: 1rem;
        cursor: pointer;
        text-align: center;
        transition: background 250ms ease-in-out, transform 150ms ease;
        -webkit-appearance: none;
        -moz-appearance: none;
    }

    .tbody button:hover,
    .tbody button:focus {
        background: #0053ba;
    }

    .tbody button + button {
        margin-left: 8px;
        background: #ff453b;
    }

    .tbody button + button:hover,
    .tbody button + button:focus {
        background: #ee0c00;
    }

    .tbody button:focus {
        outline: 1px solid #fff;
        outline-offset: -4px;
    }

    .tbody button:active {
        transform: scale(0.99);
    }

    .errorMessage {
        color: red;
        height: 17px;
        margin: 0;
        font-size: 12px;
        text-align: center;
        line-height: 1;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
        loadData();
    })

    // Render product details on screen
    function loadData() {
        $.ajax({
            url: "/Product/GetProducts",
            type: "GET",
            contentType: "application/json",
            dataType: "json",
            success: function (response) {
                var html = '';
                $.each(response, (key, item) => {
                    html += '<tr>'
                    html += '<td>' + item.Name + '</td>';
                    html += '<td>' + item.Description + '</td>';
                    html += '<td>' + item.Price + '</td>';
                    html += '<td>' + item.Quantity + '</td>';
                    html += '<td>' + item.Category + '</td>';
                    html += '<td>' + item.Supplier + '</td>';
                    html += '<td><button><a href="#" onclick="return getProductById(' + item.ProductID + ')">Edit Product</a></button>' +
                        '<button><a href="#" onClick="Delete(' + item.ProductID + ')">Delete Product</a></button></td>';
                    html += '</tr>';
                });
                $('.tbody').html(html);
            },
            error: (errormessage) => {
                alert(errormessage.responseText);
            }
        })
    }

    // Validate inputs
    function ValidateStringInput(input) {
        if (input.trim().length > 0 && /^[a-zA-Z0-9\s'!-]+$/.test(input) && isNaN(input)) {
            return true;
        }
        return false;
    }

    function ValidateNumberInput(input) {
        let trimmedinp = input.trim();
        if (trimmedinp.length > 0 && /^\d+(\.\d+)?$/.test(trimmedinp) && !isNaN(parseInt(trimmedinp))) {
            return true;
        }
        return false;
    }

    // Give feedback to user on invalid inputs
    function StringInputFeedbacks(product) {
        if (!ValidateStringInput(product.Name)) {
            $('.nameError').text("Please enter a valid name");
        } else {
            $('.nameError').html('');
        }

        if (!ValidateStringInput(product.Description)) {
            $('.descripError').text("Please enter a valid description");
        } else {
            $('.descripError').html('');
        }

        if (!ValidateStringInput(product.Category)) {
            $('.categoryError').text("Please enter a valid category");
        } else {
            $('.categoryError').html('');
        }

        if (!ValidateStringInput(product.Supplier)) {
            $('.supplierError').text("Please enter a valid supplier");
        } else {
            $('.supplierError').html('');
        }
    }

    function NumberInputFeedbacks(product) {
        if (!ValidateNumberInput(product.Price)) {
            $('.priceError').text("Please enter a valid price");
        } else {
            $('.priceError').html('');
        }

        if (!ValidateNumberInput(product.Quantity)) {
            $('.quantityError').text("Please enter a valid quantity");
        } else {
            $('.quantityError').html('');
        }
    }

    // Renders product added on screen
    function Add() {
        var product = {
            Name: $('#name').val(),
            Description: $('#description').val(),
            Price: $('#price').val(),
            Quantity: $('#quantity').val(),
            Category: $('#category').val(),
            Supplier: $('#supplier').val()
        }

        StringInputFeedbacks(product);
        NumberInputFeedbacks(product);

        const errorTexts = document.querySelectorAll('.errorMessage');
        if ([...errorTexts].some(text => text.innerText !== '')) {
            return;
        }

        // Calls AddProduct controller action method
        $.ajax({
            url: "/Product/AddProduct",
            type: "POST",
            data: JSON.stringify(product),
            contentType: "application/json",
            dataType: "json",
            success: function (response) {
                console.log(response);

                if (response == true) {
                    loadData();
                    $('#myModal').modal('hide');
                    $('.modal-backdrop').remove();
                } else {
                    $('#errormessage').text("Please check your inputs and try again");
                }
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        })

    }

    // Renders updated product info on screen
    function update() {
        var product = {
            ProductID: $('#productid').val(),
            Name: $('#name').val(),
            Description: $('#description').val(),
            Price: $('#price').val(),
            Quantity: $('#quantity').val(),
            Category: $('#category').val(),
            Supplier: $('#supplier').val()
        }

        StringInputFeedbacks(product);
        NumberInputFeedbacks(product);

        const errorTexts = document.querySelectorAll('.errorMessage');
        if ([...errorTexts].some(text => text.innerText !== '')) {
            return;
        }

        // Calls the UpdateProduct controller action method
        $.ajax({
            url: "/Product/UpdateProduct",
            data: JSON.stringify(product),
            type: "POST",
            contentType: "application/json",
            dataType: "json",
            success: function (response) {
                loadData();
                $('#myModal').modal('hide');
                $('.modal-backdrop').remove();
            },
            error: (errormessage) => {
                alert(errormessage.responseText);
            }
        })
    }

    // returns a product based on its id
    function getProductById(productId) {

        $.ajax({
            url: "/Product/GetProductById/" + productId,
            type: "GET",
            contentType: "application/json",
            dataType: "json",
            success: function (response) {
                $('#productid').val(response.ProductID);
                $('#name').val(response.Name);
                $('#description').val(response.Description);
                $('#price').val(response.Price);
                $('#quantity').val(response.Quantity);
                $('#category').val(response.Category);
                $('#supplier').val(response.Supplier);

                $('#myModal').modal('show');
                $('#btnUpdate').show();
                $('#btnAdd').hide();
            },
            error: function (errormessage) {
                alert(errormessage.responseText);
            }
        })
    }

    // Deletes a product and removes it from page
    function Delete(productId) {
        var ans = confirm('Are you sure you want to delete this product?');

        if (ans) {
            $.ajax({
                url: `/Product/DeleteProduct?productId=${productId}`,
                type: "POST",
                contentType: "application/json",
                dataType: "json",
                success: (response) => {
                    loadData();
                },
                error: (errormessage) => {
                    alert(errormessage.responseText);
                }
            });
        }
    }

    function clearTextBox() {
        $('#name').val("");
        $('#description').val("");
        $('#price').val("");
        $('#quantity').val("");
        $('#category').val("");
        $('#supplier').val("");
        $('#btnUpdate').hide();
        $('#btnAdd').show();
    }
</script>

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#myModal" onclick="clearTextBox();">Add New Product</button>

<center><h2>Products</h2></center>

<table class="table table-bordered table-hover">
    <thead>
        <tr>
            <td>Name</td>
            <td>Description</td>
            <td>Price</td>
            <td>Quantity</td>
            <td>Category</td>
            <td>Supplier</td>
            <td style="text-align: center">Action</td>
        </tr>
    </thead>
    <tbody class="tbody">
        @*        Product records will be populated here
        *@
    </tbody>
</table>

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Product</h4>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>

                    <input type="hidden" id="productid" />

                    <div class="row justify-content-center">
                        <div class="col-md-6">
                            <div class="form-group">
                                <input type="text" class="form-control" id="name" placeholder="Product name" />
                            </div>
                        </div>
                    </div>
                </form>
                <p class="errorMessage nameError"></p>
                <form>
                    <div class="row justify-content-center">
                        <div class="col-md-6">
                            <div class="form-group">
                                <input type="text" class="form-control" id="description" placeholder="Product description" />
                            </div>
                        </div>
                    </div>
                </form>
                <p class="errorMessage descripError"></p>
                <form>
                    <div class="row justify-content-center">
                        <div class="col-md-6">
                            <div class="form-group">
                                <input type="text" class="form-control" id="price" placeholder="Product price" />
                            </div>
                        </div>
                    </div>
                </form>
                <p class="errorMessage priceError"></p>
                <form>
                    <div class="row justify-content-center">
                        <div class="col-md-6">
                            <div class="form-group">
                                <input type="text" class="form-control" id="quantity" placeholder="Product quantity" />
                            </div>
                        </div>
                    </div>
                </form>
                <p class="errorMessage quantityError"></p>
                <form>
                    <div class="row justify-content-center">
                        <div class="col-md-6">
                            <div class="form-group">
                                <input type="text" class="form-control" id="category" placeholder="Product category" />
                            </div>
                        </div>
                    </div>
                </form>
                <p class="errorMessage categoryError"></p>
                <form>
                    <div class="row justify-content-center">
                        <div class="col-md-6">
                            <div class="form-group">
                                <input type="text" class="form-control" id="supplier" placeholder="Product supplier" />
                            </div>
                        </div>
                    </div>
                </form>
                <p class="errorMessage supplierError"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-primary" id="btnAdd" onclick="return Add();">Add</button>
                <button type="button" class="btn btn-outline-primary" id="btnUpdate" onclick="return update();">Update</button>
            </div>
        </div>
    </div>
</div>